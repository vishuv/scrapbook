package com.amibee.vishu.scrapbook.dao.factories;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.amibee.vishu.scrapbook.dao.impl.MysqlCommentsDaoImpl;
import com.amibee.vishu.scrapbook.dao.impl.MysqlPostsDaoImpl;
import com.amibee.vishu.scrapbook.dao.impl.MysqlUserDaoImpl;
import com.amibee.vishu.scrapbook.dao.interfaces.CommentsDao;
import com.amibee.vishu.scrapbook.dao.interfaces.PostDao;
import com.amibee.vishu.scrapbook.dao.interfaces.UserDao;

public class MysqlDaoFactory extends AbstractDaoFactory {

	
	static{
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public UserDao getUserDao() {
		return new MysqlUserDaoImpl();
	}

	@Override
	public PostDao getPostDao() {
		return new MysqlPostsDaoImpl();
	}

	@Override
	public CommentsDao getCommentsDao() {
		return new MysqlCommentsDaoImpl();
	}
	
	
	public static Connection createConnection() throws SQLException{
		
		return DriverManager.getConnection(JDBC_URL, Username, Password);
		
	}
	
	public static void closeConnection(Connection con) throws SQLException, NullPointerException{
		
				con.close();
	}
	
	public static PreparedStatement createPreparedStatement(Connection con, String sql) throws SQLException{
		return con.prepareStatement(sql);
	}
	

	public static PreparedStatement createPreparedStatement(Connection con, String sql, int autoGeneratedKeys) throws SQLException{
		return con.prepareStatement(sql,autoGeneratedKeys);
	}
	
	public static void closePreparedStatement(PreparedStatement ps) throws SQLException{
		
			ps.close();
	}
	
	public static void preparePS(Object[] objects, PreparedStatement ps) throws SQLException{
		int parameterIndex=1;
		for(Object object : objects){
			ps.setObject(parameterIndex++, object);
		}
		System.out.println(ps);
	}
	
}
